<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-11-12T13:14:42-06:00</updated><id>/feed.xml</id><title type="html">Emil Mahs</title><subtitle></subtitle><entry><title type="html">Blog post with answers for examination 1</title><link href="/jekyll/update/2018/12/13/open-graph.html" rel="alternate" type="text/html" title="Blog post with answers for examination 1" /><published>2018-12-13T12:26:00-06:00</published><updated>2018-12-13T12:26:00-06:00</updated><id>/jekyll/update/2018/12/13/open-graph</id><content type="html" xml:base="/jekyll/update/2018/12/13/open-graph.html">&lt;h3 id=&quot;what-do-you-think-of-pre-compiling-your-css&quot;&gt;What do you think of pre-compiling your CSS?&lt;/h3&gt;
&lt;p&gt;I think that it is good. Right now i personally doesn’t like it, but that is because i’m not used to it. But i can understand the functionality of it and would like to lear more about it.&lt;/p&gt;

&lt;h4 id=&quot;compare-to-regular-css&quot;&gt;Compare to regular CSS&lt;/h4&gt;
&lt;p&gt;It helps you extend the regular CSS-language with usable parts. It is less CSS to maintain, you can use variables, and it’s better organized.&lt;/p&gt;

&lt;h4 id=&quot;which-techniques-did-you-use&quot;&gt;Which techniques did you use?&lt;/h4&gt;
&lt;p&gt;For the most parts with the styling I changed the variable for what I wanted to change more globally on the website. For example to have the header and footer the same style everywhere on the website and not change it for each blog post.&lt;/p&gt;

&lt;h4 id=&quot;pros-and-cons&quot;&gt;Pros and cons?&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;br /&gt;
Nested syntax&lt;br /&gt;
Easy to change multiple CSS-styles at once&lt;br /&gt;
Can use calculations&lt;br /&gt;
Ability to define variables&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;br /&gt;
It’s more difficult to debug your code&lt;br /&gt;
It’s more complex than regular CSS, you have to handle more tools&lt;/p&gt;

&lt;h3 id=&quot;what-do-you-think-of-static-site-generators&quot;&gt;What do you think of static site generators?&lt;/h3&gt;
&lt;p&gt;At the moment i’m not a big fan of them. They feel more complex to understand what you’re getting into instead of writing you own code, at least as a rookie web developer.&lt;/p&gt;

&lt;h4 id=&quot;what-type-of-projects-are-they-suitable-for&quot;&gt;What type of projects are they suitable for?&lt;/h4&gt;
&lt;p&gt;Since it takes source files to generate a static website they are suitable for example blogs.&lt;/p&gt;

&lt;h3 id=&quot;what-is-robotstxt-and-how-have-you-configure-it-for-your-site&quot;&gt;What is robots.txt and how have you configure it for your site?&lt;/h3&gt;
&lt;p&gt;Robots.txt informs the web robot about what parts of your website that should not be processed or scanned, it is a standard to communicate with web crawlers and other web robots.&lt;/p&gt;

&lt;p&gt;It is configured so that no bots can enter the site.&lt;/p&gt;

&lt;h3 id=&quot;what-is-humanstxt-and-how-have-you-configure-it-for-your-site&quot;&gt;What is humans.txt and how have you configure it for your site?&lt;/h3&gt;
&lt;p&gt;Humans.txt is a text file that contains information about the people who have contributed to building the website.&lt;/p&gt;

&lt;p&gt;I configured it by putting it in the root file, that means that you only need to type in “/humans.txt” when you are in the home page.&lt;/p&gt;

&lt;h3 id=&quot;how-did-you-implements-comments-to-blog-posts&quot;&gt;How did you implements comments to blog posts?&lt;/h3&gt;
&lt;p&gt;First i had to make an account on Disqus to get the Universal Code to use on my site, since they don’t have specifically for Jekyll. I then added the code in posts.html under _layouts so I can add the comment box on all the blog posts I make.&lt;/p&gt;

&lt;h3 id=&quot;what-is-open-graph-and-how-do-you-make-use-of-it&quot;&gt;What is Open Graph and how do you make use of it?&lt;/h3&gt;

&lt;p&gt;Open Graph protocol gives the link you share on social media sites a “preview” of what the context is.
For example the title of the site and a picture that is on the site.&lt;/p&gt;

&lt;p&gt;You as a developer can deside what this preview should provide with meta-tags.
Like what picture you think is most important. The most important to use it title, type, url, and image.&lt;/p&gt;</content><author><name></name></author><summary type="html">What do you think of pre-compiling your CSS? I think that it is good. Right now i personally doesn’t like it, but that is because i’m not used to it. But i can understand the functionality of it and would like to lear more about it. Compare to regular CSS It helps you extend the regular CSS-language with usable parts. It is less CSS to maintain, you can use variables, and it’s better organized. Which techniques did you use? For the most parts with the styling I changed the variable for what I wanted to change more globally on the website. For example to have the header and footer the same style everywhere on the website and not change it for each blog post. Pros and cons? Pros: Nested syntax Easy to change multiple CSS-styles at once Can use calculations Ability to define variables Cons: It’s more difficult to debug your code It’s more complex than regular CSS, you have to handle more tools What do you think of static site generators? At the moment i’m not a big fan of them. They feel more complex to understand what you’re getting into instead of writing you own code, at least as a rookie web developer. What type of projects are they suitable for? Since it takes source files to generate a static website they are suitable for example blogs. What is robots.txt and how have you configure it for your site? Robots.txt informs the web robot about what parts of your website that should not be processed or scanned, it is a standard to communicate with web crawlers and other web robots. It is configured so that no bots can enter the site. What is humans.txt and how have you configure it for your site? Humans.txt is a text file that contains information about the people who have contributed to building the website. I configured it by putting it in the root file, that means that you only need to type in “/humans.txt” when you are in the home page. How did you implements comments to blog posts? First i had to make an account on Disqus to get the Universal Code to use on my site, since they don’t have specifically for Jekyll. I then added the code in posts.html under _layouts so I can add the comment box on all the blog posts I make. What is Open Graph and how do you make use of it? Open Graph protocol gives the link you share on social media sites a “preview” of what the context is. For example the title of the site and a picture that is on the site. You as a developer can deside what this preview should provide with meta-tags. Like what picture you think is most important. The most important to use it title, type, url, and image.</summary></entry><entry><title type="html">Testing a really long post with a long title to see how wide the width of the site is</title><link href="/jekyll/update/2018/12/09/long-post.html" rel="alternate" type="text/html" title="Testing a really long post with a long title to see how wide the width of the site is" /><published>2018-12-09T11:37:00-06:00</published><updated>2018-12-09T11:37:00-06:00</updated><id>/jekyll/update/2018/12/09/long-post</id><content type="html" xml:base="/jekyll/update/2018/12/09/long-post.html">&lt;p&gt;This site will just be a Lorem Ipsum text. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sit amet commodo nulla facilisi nullam vehicula ipsum a. Tristique sollicitudin nibh sit amet commodo. Ultrices eros in cursus turpis massa tincidunt dui. Imperdiet nulla malesuada pellentesque elit eget gravida cum sociis. In pellentesque massa placerat duis. Ut venenatis tellus in metus vulputate eu scelerisque felis. Eu lobortis elementum nibh tellus molestie nunc non blandit massa. Eget sit amet tellus cras. Ac placerat vestibulum lectus mauris ultrices eros in cursus turpis. Sit amet tellus cras adipiscing enim eu. Eu lobortis elementum nibh tellus. Arcu dui vivamus arcu felis bibendum ut tristique. Amet venenatis urna cursus eget. Diam vel quam elementum pulvinar etiam non quam lacus suspendisse. Diam maecenas sed enim ut sem viverra. Sollicitudin nibh sit amet commodo. Scelerisque viverra mauris in aliquam sem fringilla. Vitae tortor condimentum lacinia quis vel. Sed faucibus turpis in eu.&lt;/p&gt;

&lt;p&gt;Sit amet dictum sit amet justo donec enim diam. Eu tincidunt tortor aliquam nulla facilisi cras. Mattis nunc sed blandit libero volutpat sed. Enim nec dui nunc mattis enim ut tellus. Adipiscing elit ut aliquam purus sit amet luctus venenatis lectus. Id venenatis a condimentum vitae sapien pellentesque habitant morbi. Risus pretium quam vulputate dignissim suspendisse. Pretium viverra suspendisse potenti nullam ac tortor vitae purus faucibus. A lacus vestibulum sed arcu non odio euismod. Nulla facilisi morbi tempus iaculis urna id volutpat. Arcu cursus euismod quis viverra nibh cras pulvinar mattis nunc. Phasellus faucibus scelerisque eleifend donec pretium vulputate sapien nec. Cras adipiscing enim eu turpis egestas pretium aenean pharetra. Sit amet volutpat consequat mauris nunc congue nisi vitae. Est lorem ipsum dolor sit.&lt;/p&gt;

&lt;p&gt;Vitae tortor condimentum lacinia quis vel eros donec ac odio. Amet consectetur adipiscing elit ut aliquam purus sit amet luctus. Sapien faucibus et molestie ac feugiat sed lectus vestibulum mattis. Viverra vitae congue eu consequat ac felis. Scelerisque fermentum dui faucibus in. Risus nec feugiat in fermentum posuere urna nec tincidunt. Enim tortor at auctor urna nunc id. Ullamcorper dignissim cras tincidunt lobortis feugiat vivamus at augue eget. Dictum non consectetur a erat nam. Cras pulvinar mattis nunc sed. Placerat in egestas erat imperdiet. Condimentum mattis pellentesque id nibh.&lt;/p&gt;</content><author><name></name></author><summary type="html">This site will just be a Lorem Ipsum text. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sit amet commodo nulla facilisi nullam vehicula ipsum a. Tristique sollicitudin nibh sit amet commodo. Ultrices eros in cursus turpis massa tincidunt dui. Imperdiet nulla malesuada pellentesque elit eget gravida cum sociis. In pellentesque massa placerat duis. Ut venenatis tellus in metus vulputate eu scelerisque felis. Eu lobortis elementum nibh tellus molestie nunc non blandit massa. Eget sit amet tellus cras. Ac placerat vestibulum lectus mauris ultrices eros in cursus turpis. Sit amet tellus cras adipiscing enim eu. Eu lobortis elementum nibh tellus. Arcu dui vivamus arcu felis bibendum ut tristique. Amet venenatis urna cursus eget. Diam vel quam elementum pulvinar etiam non quam lacus suspendisse. Diam maecenas sed enim ut sem viverra. Sollicitudin nibh sit amet commodo. Scelerisque viverra mauris in aliquam sem fringilla. Vitae tortor condimentum lacinia quis vel. Sed faucibus turpis in eu. Sit amet dictum sit amet justo donec enim diam. Eu tincidunt tortor aliquam nulla facilisi cras. Mattis nunc sed blandit libero volutpat sed. Enim nec dui nunc mattis enim ut tellus. Adipiscing elit ut aliquam purus sit amet luctus venenatis lectus. Id venenatis a condimentum vitae sapien pellentesque habitant morbi. Risus pretium quam vulputate dignissim suspendisse. Pretium viverra suspendisse potenti nullam ac tortor vitae purus faucibus. A lacus vestibulum sed arcu non odio euismod. Nulla facilisi morbi tempus iaculis urna id volutpat. Arcu cursus euismod quis viverra nibh cras pulvinar mattis nunc. Phasellus faucibus scelerisque eleifend donec pretium vulputate sapien nec. Cras adipiscing enim eu turpis egestas pretium aenean pharetra. Sit amet volutpat consequat mauris nunc congue nisi vitae. Est lorem ipsum dolor sit. Vitae tortor condimentum lacinia quis vel eros donec ac odio. Amet consectetur adipiscing elit ut aliquam purus sit amet luctus. Sapien faucibus et molestie ac feugiat sed lectus vestibulum mattis. Viverra vitae congue eu consequat ac felis. Scelerisque fermentum dui faucibus in. Risus nec feugiat in fermentum posuere urna nec tincidunt. Enim tortor at auctor urna nunc id. Ullamcorper dignissim cras tincidunt lobortis feugiat vivamus at augue eget. Dictum non consectetur a erat nam. Cras pulvinar mattis nunc sed. Placerat in egestas erat imperdiet. Condimentum mattis pellentesque id nibh.</summary></entry><entry><title type="html">Starting Commit</title><link href="/jekyll/update/2018/11/20/starting-commit.html" rel="alternate" type="text/html" title="Starting Commit" /><published>2018-11-20T04:20:31-06:00</published><updated>2018-11-20T04:20:31-06:00</updated><id>/jekyll/update/2018/11/20/starting-commit</id><content type="html" xml:base="/jekyll/update/2018/11/20/starting-commit.html">&lt;p&gt;Starting commit for the second call&lt;/p&gt;</content><author><name></name></author><summary type="html">Starting commit for the second call</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2018/11/19/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-11-19T04:20:31-06:00</published><updated>2018-11-19T04:20:31-06:00</updated><id>/jekyll/update/2018/11/19/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2018/11/19/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: def print_hi(name) puts &quot;Hi, #{name}&quot; end print_hi('Tom') #=&amp;gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.</summary></entry></feed>